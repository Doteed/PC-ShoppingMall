-- 테이블 삭제
--DROP TABLE DELIVERY CASCADE CONSTRAINTS;
--DROP TABLE ORDER_TABLE CASCADE CONSTRAINTS;
--DROP TABLE PRODUCT CASCADE CONSTRAINTS;
--DROP TABLE REVIEW CASCADE CONSTRAINTS;
--DROP TABLE CATEGORY CASCADE CONSTRAINTS;
--DROP TABLE PAY_BANK CASCADE CONSTRAINTS;
--DROP TABLE PAY_CARD CASCADE CONSTRAINTS;
--DROP TABLE PAYMENT_PLAN CASCADE CONSTRAINTS;
--DROP TABLE ANNOUNCEMENT CASCADE CONSTRAINTS;
--DROP TABLE QA CASCADE CONSTRAINTS;
--DROP TABLE FAQ CASCADE CONSTRAINTS;
--DROP TABLE BOARD CASCADE CONSTRAINTS;
--DROP TABLE AUTHORITY CASCADE CONSTRAINTS;
--DROP TABLE MEMBER CASCADE CONSTRAINTS;
--DROP TABLE CPU CASCADE CONSTRAINTS;
--DROP TABLE POWER CASCADE CONSTRAINTS;
--DROP TABLE "CASE" CASCADE CONSTRAINTS;
--DROP TABLE SSD CASCADE CONSTRAINTS;
--DROP TABLE HDD CASCADE CONSTRAINTS;
--DROP TABLE GRAPHIC_CARD CASCADE CONSTRAINTS;
--DROP TABLE RAM CASCADE CONSTRAINTS;
--DROP TABLE MAINBOARD CASCADE CONSTRAINTS;
--DROP TABLE COOLER CASCADE CONSTRAINTS;

-- SEQUENCE 삭제
--DROP SEQUENCE SEQ_DELEVERY;
--DROP SEQUENCE SEQ_ORDER_TABLE;
--DROP SEQUENCE SEQ_PRODUCT;
--DROP SEQUENCE SEQ_CATEGORY;
--DROP SEQUENCE SEQ_PAYBANK;
--DROP SEQUENCE SEQ_PAYCARD;
--DROP SEQUENCE SEQ_PAYMENT_PLAN;
--DROP SEQUENCE SEQ_ANNOUNCEMENT;
--DROP SEQUENCE SEQ_QA;
--DROP SEQUENCE SEQ_FAQ;
--DROP SEQUENCE SEQ_BOARD;
--DROP SEQUENCE SEQ_MEMBER;
--DROP SEQUENCE SEQ_CPU;
--DROP SEQUENCE SEQ_REVIEW;

-- 데이터베이스 정리
COMMIT;

-- Authority Table
CREATE TABLE "AUTHORITY" (
    "AUTH_ID" NUMBER PRIMARY KEY,
    "AUTH_NAME" VARCHAR2(100) NOT NULL,
    "AUTH_ROLE" VARCHAR2(100) NOT NULL
);

-- Member Table
CREATE TABLE "MEMBER" (
    "USER_ID" VARCHAR2(30) PRIMARY KEY,  -- 대소문자 구분
    "AUTH_ID" NUMBER NOT NULL,           -- Authority identifier
    "PASSWORD" VARCHAR2(30) NOT NULL,    -- User password
    "USERNAME" VARCHAR2(30) NOT NULL,    -- User name
    "GENDER" CHAR(1) NOT NULL CHECK ("GENDER" IN ('F', 'M')), -- Gender constraint
    "EMAIL" VARCHAR2(100) NOT NULL,      -- Email address
    "PHONE" VARCHAR2(30),                -- Phone number
    "REGISTER_DATE" DATE DEFAULT SYSDATE, -- Registration date
    "LAST_UPDATE" DATE DEFAULT SYSDATE,  -- Last update timestamp
    "MEMBER_STATUS" CHAR(1) DEFAULT 'Y' NOT NULL CHECK ("MEMBER_STATUS" IN ('Y', 'N')), -- Membership status constraint
    FOREIGN KEY ("AUTH_ID") REFERENCES "AUTHORITY"("AUTH_ID") -- Foreign key reference
);
CREATE SEQUENCE SEQ_MEMBER NOCACHE;

-- Board Table
CREATE TABLE "BOARD" (
    "BOARD_ID" NUMBER PRIMARY KEY,
    "USER_ID" VARCHAR2(30) NOT NULL,
    "AUTH_ID" NUMBER NOT NULL,
    "BOARD_TYPE" VARCHAR2(30) NOT NULL,
    FOREIGN KEY ("USER_ID") REFERENCES "MEMBER"("USER_ID"),
    FOREIGN KEY ("AUTH_ID") REFERENCES "AUTHORITY"("AUTH_ID")
);
CREATE SEQUENCE SEQ_BOARD NOCACHE;

DROP SEQUENCE SEQ_ANNOUNCEMENT;
DROP SEQUENCE SEQ_QA;
DROP SEQUENCE SEQ_FAQ;
DROP TABLE "ANNOUNCEMENT" CASCADE CONSTRAINTS;
CREATE TABLE "ANNOUNCEMENT" (
    "ANNOUNC_ID" NUMBER PRIMARY KEY,                   -- 공지사항 ID
    "BOARD_ID" NUMBER NOT NULL,                        -- 게시판 ID
    "USER_ID" VARCHAR2(30) NOT NULL,                   -- 작성자 ID
    "AUTH_ID" NUMBER NOT NULL,                         -- 권한 ID
    "TITLE" VARCHAR2(300) NOT NULL,                    -- 제목
    "CONTENT" CLOB NOT NULL,                           -- 내용
    "CREATED_DATE" DATE DEFAULT SYSDATE NOT NULL,      -- 생성 날짜
    FOREIGN KEY ("BOARD_ID") REFERENCES "BOARD"("BOARD_ID") 
        ON DELETE CASCADE,
    FOREIGN KEY ("USER_ID") REFERENCES "MEMBER"("USER_ID") 
        ON DELETE CASCADE,
    FOREIGN KEY ("AUTH_ID") REFERENCES "AUTHORITY"("AUTH_ID") 
        ON DELETE CASCADE
);
-- SEQUENCE 생성 (자동 증가 ID를 위한)
CREATE SEQUENCE ANNOUNCEMENT_SEQ 
START WITH 1 
INCREMENT BY 1 
NOCACHE 
NOCYCLE;
-- 트리거 생성 (ID 자동 증가)
CREATE OR REPLACE TRIGGER ANNOUNCEMENT_ID_TRIGGER
BEFORE INSERT ON "ANNOUNCEMENT"
FOR EACH ROW
BEGIN
    :NEW."ANNOUNC_ID" := ANNOUNCEMENT_SEQ.NEXTVAL;
END;

-- FAQ Table
CREATE TABLE FAQ (
    "FAQ_ID" NUMBER PRIMARY KEY, -- FAQ 아이디
    "BOARD_ID" NUMBER NOT NULL,
    "USER_ID" VARCHAR2(30) NOT NULL,
    "AUTH_ID" NUMBER NOT NULL,
    "TITLE" VARCHAR2(300) NOT NULL,
    "CONTENT" CLOB NOT NULL,
    "CREATED_DATE" DATE DEFAULT SYSDATE NOT NULL,      -- 생성 날짜
    FOREIGN KEY ("BOARD_ID") REFERENCES "BOARD"("BOARD_ID") 
        ON DELETE CASCADE,
    FOREIGN KEY ("USER_ID") REFERENCES "MEMBER"("USER_ID") 
        ON DELETE CASCADE,
    FOREIGN KEY ("AUTH_ID") REFERENCES "AUTHORITY"("AUTH_ID") 
        ON DELETE CASCADE
);
-- SEQUENCE 생성 (자동 증가 ID를 위한)
CREATE SEQUENCE FAQ_SEQ 
START WITH 1 
INCREMENT BY 1 
NOCACHE 
NOCYCLE;
-- 트리거 생성 (ID 자동 증가)
CREATE OR REPLACE TRIGGER FAQ_ID_TRIGGER
BEFORE INSERT ON "FAQ"
FOR EACH ROW
BEGIN
    :NEW."FAQ_ID" := FAQ_SEQ.NEXTVAL;
END;

-- QNA Table
CREATE TABLE QNA (
    "QNA_ID" NUMBER PRIMARY KEY, -- QnA 아이디
    "BOARD_ID" NUMBER NOT NULL, -- 게시판 아이디
    "USER_ID" VARCHAR2(30) NOT NULL, -- 작성자 아이디
    "AUTH_ID" NUMBER NOT NULL, -- 권한 아이디
    "TITLE" VARCHAR2(300) NOT NULL, -- 제목
    "CONTENT" CLOB NOT NULL, -- 본문 내용
    "ANSWER" CLOB, -- 답변 내용
    "PASSWORD" VARCHAR2(255),
    "IS_SECRET" NUMBER(1) DEFAULT 0 NOT NULL,     -- 비밀글 여부
    "CREATED_DATE" DATE DEFAULT SYSDATE NOT NULL, -- 생성 날짜
    FOREIGN KEY ("BOARD_ID") REFERENCES "BOARD"("BOARD_ID") 
        ON DELETE CASCADE,
    FOREIGN KEY ("USER_ID") REFERENCES "MEMBER"("USER_ID") 
        ON DELETE CASCADE,
    FOREIGN KEY ("AUTH_ID") REFERENCES "AUTHORITY"("AUTH_ID") 
        ON DELETE CASCADE
);
-- SEQUENCE 생성 (자동 증가 ID를 위한)
CREATE SEQUENCE QNA_SEQ 
START WITH 1 
INCREMENT BY 1 
NOCACHE 
NOCYCLE;
-- 트리거 생성 (ID 자동 증가)
CREATE OR REPLACE TRIGGER QNA_ID_TRIGGER
BEFORE INSERT ON "QNA"
FOR EACH ROW
BEGIN
    :NEW."QNA_ID" := QNA_SEQ.NEXTVAL;
END;

-- Category Table
CREATE TABLE "CATEGORY" (
    "CATEGORY_ID" NUMBER PRIMARY KEY,
    "PARENT_ID" NUMBER,
    "CATEGORY_NAME" VARCHAR2(100) NOT NULL,
    "CATEGORY_CODE" VARCHAR2(20) NOT NULL,
    "CATEGORY_LEVEL" NUMBER(1) NOT NULL,
    "SORT_ORDER" NUMBER DEFAULT 0,
    CONSTRAINT FK_CATEGORY_PARENT FOREIGN KEY (PARENT_ID) REFERENCES CATEGORY(CATEGORY_ID)
);


INSERT INTO "CATEGORY" ("CATEGORY_ID", "CATEGORY_NAME") VALUES (SEQ_CATEGORY.NEXTVAL, 'CPU');
INSERT INTO "CATEGORY" ("CATEGORY_ID", "CATEGORY_NAME") VALUES (SEQ_CATEGORY.NEXTVAL, 'SSD');
INSERT INTO "CATEGORY" ("CATEGORY_ID", "CATEGORY_NAME") VALUES (SEQ_CATEGORY.NEXTVAL, 'COOLER');
INSERT INTO "CATEGORY" ("CATEGORY_ID", "CATEGORY_NAME") VALUES (SEQ_CATEGORY.NEXTVAL, 'GRAPHIC_CARD');
INSERT INTO "CATEGORY" ("CATEGORY_ID", "CATEGORY_NAME") VALUES (SEQ_CATEGORY.NEXTVAL, 'HDD');
INSERT INTO "CATEGORY" ("CATEGORY_ID", "CATEGORY_NAME") VALUES (SEQ_CATEGORY.NEXTVAL, 'POWER');
INSERT INTO "CATEGORY" ("CATEGORY_ID", "CATEGORY_NAME") VALUES (SEQ_CATEGORY.NEXTVAL, 'RAM');
INSERT INTO "CATEGORY" ("CATEGORY_ID", "CATEGORY_NAME") VALUES (SEQ_CATEGORY.NEXTVAL, 'MAINBOARD');
INSERT INTO "CATEGORY" ("CATEGORY_ID", "CATEGORY_NAME") VALUES (SEQ_CATEGORY.NEXTVAL, 'CASE');

SELECT * FROM "CATEGORY" ORDER BY "CATEGORY_ID" ASC;

CREATE SEQUENCE SEQ_CATEGORY START WITH 1 INCREMENT BY 1 NOCACHE;

-- 제약 조건 추가
ALTER TABLE "CATEGORY" ADD CONSTRAINT UQ_CATEGORY_CODE UNIQUE (CATEGORY_CODE);
ALTER TABLE "CATEGORY" ADD CONSTRAINT CK_CATEGORY_LEVEL CHECK (CATEGORY_LEVEL IN (1, 2, 3));


CREATE TABLE "PRODUCT" ( 
    "PRODUCT_ID" NUMBER PRIMARY KEY,        -- 상품 아이디
    "USER_ID" VARCHAR2(30) NOT NULL,        -- 사용자 아이디
    "CATEGORY_ID" NUMBER NOT NULL,          -- 카테고리 아이디
    "AUTH_ID" NUMBER NOT NULL,              -- 권한 식별자
    "P_PRICE" NUMBER NOT NULL,              -- 상품 가격
    "P_NAME" VARCHAR2(300) NOT NULL,        -- 상품명
    "P_STOCK" NUMBER,                       -- 재고 수량
    "P_REPORTSTOCK" NUMBER,                 -- 통보 수량
    "P_ENROLL" DATE NOT NULL,               -- 등록일
    "IMAGE_URL" VARCHAR2(500),              -- 이미지 URL
    "P_EXPLAN" VARCHAR2(2000),              -- 상품 설명
    "P_SALE" CHAR(1) DEFAULT 'Y' CHECK ("P_SALE" IN ('Y', 'N')),  -- 판매 여부
    "P_SOLDOUT" CHAR(1) DEFAULT 'N' CHECK ("P_SOLDOUT" IN ('Y', 'N')), -- 품절 여부
    "ORDER_WAITING" NUMBER DEFAULT 0,       -- 대기 중 주문 수량
    "AVAILABLE_STOCK" NUMBER,               -- 가용 재고 (트리거로 관리)
    FOREIGN KEY ("USER_ID") REFERENCES "MEMBER"("USER_ID"),         -- 사용자 외래키
    FOREIGN KEY ("AUTH_ID") REFERENCES "AUTHORITY"("AUTH_ID"),      -- 권한 외래키
    FOREIGN KEY ("CATEGORY_ID") REFERENCES "CATEGORY"("CATEGORY_ID") -- 카테고리 외래키
);
CREATE SEQUENCE SEQ_PRODUCT NOCACHE;

CREATE OR REPLACE TRIGGER TRG_UPDATE_AVAILABLE_STOCK
BEFORE INSERT OR UPDATE ON PRODUCT
FOR EACH ROW
BEGIN
  -- 가용 재고 계산
  :NEW.AVAILABLE_STOCK := NVL(:NEW.P_STOCK, 0) - NVL(:NEW.ORDER_WAITING, 0);
END;

-- Review Table
CREATE TABLE REVIEW (
    "REVIEW_ID" NUMBER PRIMARY KEY, -- 리뷰 아이디
    "PRODUCT_ID" NUMBER NOT NULL, -- 상품 참조
    "ORDER_ID" NUMBER NOT NULL, -- 주문 참조
    "USER_ID" VARCHAR2(30) NOT NULL,
    "AUTH_ID" NUMBER NOT NULL,
    "TITLE" VARCHAR2(300) NOT NULL,
    "CONTENT" VARCHAR2(3000) NOT NULL,
    "DATE" DATE NOT NULL,
    "RATING" NUMBER NOT NULL, -- 평점
    FOREIGN KEY ("PRODUCT_ID") REFERENCES "PRODUCT"("PRODUCT_ID"),
    FOREIGN KEY ("ORDER_ID") REFERENCES "ORDER_TABLE"("ORDER_ID"),
    FOREIGN KEY ("USER_ID") REFERENCES "MEMBER"("USER_ID"),
    FOREIGN KEY ("AUTH_ID") REFERENCES "AUTHORITY"("AUTH_ID")
);
CREATE SEQUENCE SEQ_REVIEW NOCACHE;

-- Delivery Table
CREATE TABLE "DELIVERY" (
    "DELIVERY_ID" NUMBER PRIMARY KEY, 
    "ADRESSEE" VARCHAR2(300) NOT NULL,
    "ADDRESS" VARCHAR2(300) NOT NULL, 
    "PHONE" VARCHAR2(30) NOT NULL, 
    "DELIVERY_STATUS" VARCHAR2(100) NOT NULL
);
CREATE SEQUENCE SEQ_DELIVERY NOCACHE;

-- Order Table
CREATE TABLE "ORDER_TABLE" (
    "ORDER_ID" NUMBER PRIMARY KEY,         -- 주문 아이디
    "DELIVERY_ID" NUMBER NOT NULL,         -- 배송 아이디
    "USER_ID" VARCHAR2(30) NOT NULL,       -- 회원 아이디
    "AUTH_ID" NUMBER NOT NULL, 		   -- 권한 식별자
    "PRODUCT_ID" NUMBER NOT NULL,          -- 상품 아이디
    "TOTAL_PRICE" NUMBER NOT NULL,         -- 총 가격
    "CARTSTATUS" CHAR(1) NOT NULL CHECK ("CARTSTATUS" IN ('Y', 'N')), -- 카트 상태 (Y/N)
    "PAYMENT_METHOD" VARCHAR2(30) NOT NULL, -- 결제 방법
    "ORDER_DATE" DATE NOT NULL,            -- 주문 날짜
    FOREIGN KEY ("USER_ID") REFERENCES "MEMBER"("USER_ID"), -- 회원 외래키
    FOREIGN KEY ("AUTH_ID") REFERENCES "AUTHORITY"("AUTH_ID"),
    FOREIGN KEY ("DELIVERY_ID") REFERENCES "DELIVERY"("DELIVERY_ID"), -- 배송 외래키
    FOREIGN KEY ("PRODUCT_ID") REFERENCES "PRODUCT"("PRODUCT_ID") -- 상품 외래키
);

CREATE SEQUENCE SEQ_ORDER_TABLE NOCACHE;

-- Payment Plan Table
CREATE TABLE "PAYMENT_PLAN" (
    "PP_ID" NUMBER PRIMARY KEY, -- 결제 계획 식별자
    "PP_NAME" VARCHAR2(30) NOT NULL -- 결제 방식
);
CREATE SEQUENCE SEQ_PAYMENT_PLAN NOCACHE;

-- Payment Card Table
CREATE TABLE "PAY_CARD" (
    "PC_ID" NUMBER PRIMARY KEY, -- 카드 결제 식별자
    "PP_ID" NUMBER NOT NULL, -- 결제 방식
    "CARD_TYPE" VARCHAR2(30) NOT NULL, -- 카드 타입
    "FIELD1" VARCHAR2(30),
    "FIELD2" VARCHAR2(30),
    "FIELD3" VARCHAR2(30),
    "FIELD4" VARCHAR2(30),
    FOREIGN KEY ("PP_ID") REFERENCES "PAYMENT_PLAN"("PP_ID") -- 관계 설정
);
CREATE SEQUENCE SEQ_PAYCARD NOCACHE;

-- Payment Bank Table
CREATE TABLE "PAY_BANK" (
    "BANK_ID" NUMBER PRIMARY KEY, -- 은행 결제 식별자
    "PP_ID" NUMBER NOT NULL, -- 결제 방식
    "BANK_NAME" VARCHAR2(100) NOT NULL, -- 은행명
    "FIELD5" VARCHAR2(30),
    "FIELD6" VARCHAR2(30),
    "FIELD7" VARCHAR2(30),
    FOREIGN KEY ("PP_ID") REFERENCES "PAYMENT_PLAN"("PP_ID") -- 관계 설정
);
CREATE SEQUENCE SEQ_PAYBANK NOCACHE;

-- Hardware Tables (CPU Example)------------------------
CREATE TABLE "CPU" (
    "CPU_ID" NUMBER PRIMARY KEY, -- CPU 아이디
    "CATEGORY_ID" NUMBER NOT NULL, -- 카테고리 아이디
    "MANUFACTURER" VARCHAR2(100) NOT NULL, -- 제조사
    "PRODUCT_NAME" VARCHAR2(100) NOT NULL, -- 제품명
    "INTELTYPE" VARCHAR(100),
    "AMDTYPE" VARCHAR(100),
    "CORE_TYPES" NUMBER NOT NULL, -- 코어 종류
    "SOCKET" VARCHAR2(30) NOT NULL, -- 소켓
    "PRICE" NUMBER NOT NULL, -- 가격
    "SUPPORTED_MEMORY_STANDARD" VARCHAR2(50) NOT NULL, -- 메모리 규격
    "RELEASE_DATE" DATE NOT NULL, -- 출시일
    FOREIGN KEY ("CATEGORY_ID") REFERENCES "CATEGORY"("CATEGORY_ID") -- 관계 설정
);
DROP TABLE CPU CASCADE CONSTRAINTS;
DROP SEQUENCE SEQ_CPU;

CREATE SEQUENCE SEQ_CPU NOCACHE;

---------------------------CPU 데이터 삽입---------------------------------------
INSERT INTO "CPU" ("CPU_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "INTELTYPE", "AMDTYPE" , "CORE_TYPES", "SOCKET", "SUPPORTED_MEMORY_STANDARD" , "PRICE", "RELEASE_DATE")
VALUES (SEQ_CPU.NEXTVAL, 1, '인텔', '인텔 코어 울트라9 시리즈2 285K (애로우레이크)', '울트라 9' , NULL, 24 , '인텔(소켓1851)', 'DDR5' , 963560 , TO_DATE('2024-10-14'));

INSERT INTO "CPU" ("CPU_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "INTELTYPE", "AMDTYPE" , "CORE_TYPES", "SOCKET", "SUPPORTED_MEMORY_STANDARD", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_CPU.NEXTVAL, 1, '인텔', '인텔 코어i7-14세대 14700K (랩터레이크 리프레시)', '코어 i7' , NULL, 20, '인텔(소켓1700)', 'DDR5', 557450 , TO_DATE('2023-10-07'));

INSERT INTO "CPU" ("CPU_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "INTELTYPE", "AMDTYPE" , "CORE_TYPES", "SOCKET", "SUPPORTED_MEMORY_STANDARD", "PRICE", "RELEASE_DATE")
VALUES (SEQ_CPU.NEXTVAL, 1, 'AMD', 'AMD 라이젠7-4세대 5700X (버미어)' , NULL , '라이젠7', 8, 'AM4', 'DDR4' , 301400 , TO_DATE('2024-01-17'));

INSERT INTO "CPU" ("CPU_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "INTELTYPE", "AMDTYPE" , "CORE_TYPES", "SOCKET", "SUPPORTED_MEMORY_STANDARD", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_CPU.NEXTVAL, 1, 'AMD', 'AMD 라이젠9-6세대 9900X (그래니트 릿지)' , NULL , '라이젠9', 12, 'AM5', 'DDR5' , 753000 , TO_DATE('2024-08-11'));

INSERT INTO "CPU" ("CPU_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "INTELTYPE", "AMDTYPE" , "CORE_TYPES", "SOCKET", "SUPPORTED_MEMORY_STANDARD", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_CPU.NEXTVAL, 1, 'AMD', 'AMD 라이젠7-6세대 9800X3D (그래니트 릿지)' , NULL , '라이젠7',  8, 'AM5', 'DDR5' , 1139250 , TO_DATE('2024-11-25'));

SELECT * FROM "CPU" ORDER BY "CPU_ID" ASC;







-- SSD 테이블--------------------------------
CREATE TABLE "SSD" (
	"SSD_ID" NUMBER PRIMARY KEY,
    "CATEGORY_ID" NUMBER NOT NULL,
    "MANUFACTURER" VARCHAR(230) NOT NULL,
    "PRODUCT_NAME" VARCHAR2(100) NOT NULL,
    "FORM_FACTOR" VARCHAR(230) NOT NULL,
    "CAPACITY" VARCHAR(230) NOT NULL,
    "INTERFACE" VARCHAR(230) NOT NULL,
    "PROTOCOL" VARCHAR(230) NOT NULL,
    "PRICE" NUMBER NOT NULL,
    "RELEASE_DATE" DATE NOT NULL,
    FOREIGN KEY ("CATEGORY_ID") REFERENCES "CATEGORY"("CATEGORY_ID") -- 관계 설정
);
CREATE SEQUENCE SEQ_SSD NOCACHE;

------------------------SSD 데이터 삽입-----------------------------------------
INSERT INTO "SSD" ("SSD_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME" , "FORM_FACTOR", "CAPACITY", "INTERFACE", "PROTOCOL" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_SSD.NEXTVAL, 2, '삼성전자', '삼성전자 980 PRO M.2 NVMe (1TB)', 'M.2 (2280)', '1TB', 'PCIe4.0x4 (64GT/s)', 'NVMe 1.3' , 209000 , TO_DATE('2020-09-04'));

INSERT INTO "SSD" ("SSD_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "FORM_FACTOR", "CAPACITY", "INTERFACE", "PROTOCOL" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_SSD.NEXTVAL, 2, 'SK하이닉tm', 'SK하이닉스 Gold P31 M.2 NVMe (500GB)', 'M.2 (2280)', '500GB', 'PCIe3.0x4 (32GT/s)', 'NVMe 1.3', 85800 , TO_DATE('2021-01-24'));

INSERT INTO "SSD" ("SSD_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME" ,"FORM_FACTOR", "CAPACITY", "INTERFACE", "PROTOCOL" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_SSD.NEXTVAL, 2, '마이크론', '마이크론 Crucial T500 M.2 NVMe 대원씨티에스 (1TB)', 'M.2 (2280)', '1TB', 'PCIe4.0x4 (64GT/s)', 'NVMe 1.4', 129800 , TO_DATE('2023-11-11'));

INSERT INTO "SSD" ("SSD_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME" ,"FORM_FACTOR", "CAPACITY", "INTERFACE", "PROTOCOL" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_SSD.NEXTVAL, 2, 'SK하이닉스', 'SK하이닉스 Platinum P41 M.2 NVMe (2TB)', 'M.2 (2280)', '2TB', 'PCIe4.0x4 (64GT/s)', 'NVMe 1.4', 257040 , TO_DATE('2022-05-07'));

INSERT INTO "SSD" ("SSD_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME" ,"FORM_FACTOR", "CAPACITY", "INTERFACE", "PROTOCOL" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_SSD.NEXTVAL, 2, '솔리다임', '솔리다임 P44 Pro M.2 NVMe 벌크 (2TB)', 'M.2 (2280)', '2TB', 'PCIe4.0x4 (64GT/s)', 'NVMe 1.4' , 187480 , TO_DATE('2024-10-10'));

SELECT * FROM "SSD" ORDER BY "SSD_ID" ASC;






-- 쿨러 테이블--------------------------------------------------------------------
CREATE TABLE "COOLER" (
	"COOLER_ID" NUMBER PRIMARY KEY,
    "CATEGORY_ID" NUMBER NOT NULL,
    "MANUFACTURER" VARCHAR(230) NOT NULL,
    "PRODUCT_NAME" VARCHAR2(100) NOT NULL,
    "COOLING_METHOD" VARCHAR(230) NOT NULL,
    "WARRANTY_PERIOD" VARCHAR(230) NOT NULL,
    "PRICE" NUMBER NOT NULL,
    "RELEASE_DATE" DATE NOT NULL,
    FOREIGN KEY ("CATEGORY_ID") REFERENCES "CATEGORY"("CATEGORY_ID") -- 관계 설정
);
CREATE SEQUENCE SEQ_COOLER NOCACHE;
-- 쿨러 데이터 삽입----
INSERT INTO "COOLER" ("COOLER_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "COOLING_METHOD", "WARRANTY_PERIOD" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_COOLER.NEXTVAL, 3, '잘만', '잘만 Alpha II A36 (블랙)', '수랭', '5년' , 117660 , TO_DATE('2024-01-14'));

INSERT INTO "COOLER" ("COOLER_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "COOLING_METHOD", "WARRANTY_PERIOD" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_COOLER.NEXTVAL, 3, '쿨러마스터', '쿨러마스터 MASTERLIQUID 360 ATMOS (블랙)', '수랭', '5년', 182520 , TO_DATE('2024-01-24'));

INSERT INTO "COOLER" ("COOLER_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME" , "COOLING_METHOD", "WARRANTY_PERIOD" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_COOLER.NEXTVAL, 3, 'darkFlash', 'darkFlash NEBULA DN-360D ARGB (블랙)', '수랭', '5년' , 94910 , TO_DATE('2024-08-02'));

INSERT INTO "COOLER" ("COOLER_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME" , "COOLING_METHOD", "WARRANTY_PERIOD" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_COOLER.NEXTVAL, 3, 'DEEPCOOL', 'DEEPCOOL AG620', '공랭', '1년' , 34560 , TO_DATE('2022-07-04'));

INSERT INTO "COOLER" ("COOLER_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME" , "COOLING_METHOD", "WARRANTY_PERIOD" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_COOLER.NEXTVAL, 3, 'PCCOOLER', 'PCCOOLER PALADIN 400 (블랙)', '공랭', '3년' , 30790 , TO_DATE('2021-05-16'));

SELECT * FROM "COOLER" ORDER BY "COOLER_ID" ASC;






-- 그래픽 카드 테이블------------------------------------------------------------------------
CREATE TABLE "GRAPHIC_CARD" (
	"GRAPHIC_CARD_ID" NUMBER PRIMARY KEY,
    "CATEGORY_ID" NUMBER NOT NULL,
    "MANUFACTURER" VARCHAR(230) NOT NULL,
    "PRODUCT_NAME" VARCHAR2(100) NOT NULL,
    "CHIPSET_MANUFACTURER" VARCHAR(230) NOT NULL,
    "CHIPSET" VARCHAR(230) NOT NULL,
    "VGA_LENGTH" NUMBER NOT NULL,
    "PRICE" NUMBER NOT NULL,
    "RELEASE_DATE" DATE NOT NULL,
    FOREIGN KEY ("CATEGORY_ID") REFERENCES "CATEGORY"("CATEGORY_ID") -- 관계 설정
);
CREATE SEQUENCE SEQ_GRAPHIC_CARD NOCACHE;

-- 데이터 삽입
INSERT INTO "GRAPHIC_CARD" ("GRAPHIC_CARD_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME" , "CHIPSET_MANUFACTURER", "CHIPSET", "VGA_LENGTH" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_GRAPHIC_CARD.NEXTVAL, 4, 'ASUS', 'ASUS DUAL 지포스 RTX 4060 O8G OC D6 8GB 인텍앤컴퍼니', 'NVIDIA', 'RTX 4060', 227.2 , 463000 , TO_DATE('2023-06-27'));

INSERT INTO "GRAPHIC_CARD" ("GRAPHIC_CARD_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME" , "CHIPSET_MANUFACTURER", "CHIPSET", "VGA_LENGTH" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_GRAPHIC_CARD.NEXTVAL, 4, '이엠텍', '이엠텍 지포스 RTX 4080 SUPER MIRACLE WHITE D6X 16GB', 'NVIDIA', 'RTX 4080 SUPER', 348 , 1710210 , TO_DATE('2024-02-08'));

INSERT INTO "GRAPHIC_CARD" ("GRAPHIC_CARD_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME" , "CHIPSET_MANUFACTURER", "CHIPSET", "VGA_LENGTH" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_GRAPHIC_CARD.NEXTVAL, 4, 'MSI', 'MSI 지포스 RTX 4060 Ti 벤투스 2X 블랙 OC D6 16GB', 'NVIDIA', 'RTX 4060 Ti', 199 , 708500 , TO_DATE('2023-08-11'));

INSERT INTO "GRAPHIC_CARD" ("GRAPHIC_CARD_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME" , "CHIPSET_MANUFACTURER", "CHIPSET", "VGA_LENGTH" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_GRAPHIC_CARD.NEXTVAL, 4, 'GIGABYTE', 'GIGABYTE 라데온 RX 7800 XT GAMING OC D6 16GB 피씨디렉트', 'AMD', 'RX 7800 XT', 302 , 737120 , TO_DATE('2023-09-19'));

INSERT INTO "GRAPHIC_CARD" ("GRAPHIC_CARD_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME" , "CHIPSET_MANUFACTURER", "CHIPSET", "VGA_LENGTH" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_GRAPHIC_CARD.NEXTVAL, 4, 'ASUS', 'ASUS DUAL 라데온 RX 7800 XT O16G OC D6 16GB', 'AMD', 'RX 7800 XT', 279.9 , 758340 , TO_DATE('2024-05-19'));

SELECT * FROM "GRAPHIC_CARD" ORDER BY "GRAPHIC_CARD_ID" ASC;






-- HDD 테이블---------------------------------------------------------
CREATE TABLE "HDD" (
	"HDD_ID" NUMBER PRIMARY KEY,
    "CATEGORY_ID" NUMBER NOT NULL,
    "MANUFACTURER" VARCHAR(230) NOT NULL,
    "PRODUCT_NAME" VARCHAR2(100) NOT NULL,
    "PRODUCT_CLASSIFICATION" VARCHAR(230) NOT NULL,
    "DISK_SIZE" VARCHAR(230) NOT NULL,
    "CAPACITY" VARCHAR(230) NOT NULL,
    "INTERFACE" VARCHAR(230) NOT NULL,
    "PRICE" NUMBER NOT NULL,
    "RELEASE_DATE" DATE NOT NULL,
    FOREIGN KEY ("CATEGORY_ID") REFERENCES "CATEGORY"("CATEGORY_ID") -- 관계 설정
);
CREATE SEQUENCE SEQ_HDD NOCACHE;

-- 데이터 삽입
INSERT INTO "HDD" ("HDD_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "PRODUCT_CLASSIFICATION", "DISK_SIZE", "CAPACITY", "INTERFACE", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_HDD.NEXTVAL, 5, 'Seagate', 'Seagate BarraCuda 5400/256M (ST4000DM004, 4TB)', 'HDD (PC용)', '8.9cm(3.5인치)', '4TB', 'SATA3 (6Gb/s)', 134540 , TO_DATE('2017-05-13'));

INSERT INTO "HDD" ("HDD_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "PRODUCT_CLASSIFICATION", "DISK_SIZE", "CAPACITY", "INTERFACE", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_HDD.NEXTVAL, 5, 'Seagate', 'Seagate BarraCuda 7200/256M (ST2000DM008, 2TB)', 'HDD (PC용)', '8.9cm(3.5인치)', '2TB', 'SATA3 (6Gb/s)', 93500 , TO_DATE('2018-10-24'));

INSERT INTO "HDD" ("HDD_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "PRODUCT_CLASSIFICATION", "DISK_SIZE", "CAPACITY", "INTERFACE", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_HDD.NEXTVAL, 5, 'Western Digital', 'Western Digital WD Blue 5640/256M (WD80EAAZ, 8TB)', 'HDD (PC용)', '8.9cm(3.5인치)', '8TB', 'SATA3 (6Gb/s)', 213840 , TO_DATE('2024-03-12'));

INSERT INTO "HDD" ("HDD_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "PRODUCT_CLASSIFICATION", "DISK_SIZE", "CAPACITY", "INTERFACE", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_HDD.NEXTVAL, 5, '도시바', '도시바 P300 7200/256M (HDWD320, 2TB)', 'HDD (PC용)', '8.9cm(3.5인치)', '2TB', 'SATA3 (6Gb/s)', 83920 , TO_DATE('2022-06-08'));

INSERT INTO "HDD" ("HDD_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "PRODUCT_CLASSIFICATION", "DISK_SIZE", "CAPACITY", "INTERFACE", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_HDD.NEXTVAL, 5, '도시바', '도시바 X300 Refresh 7200/512M (HDWR780, 8TB)', 'HDD (PC용)', '8.9cm(3.5인치)', '8TB', 'SATA3 (6Gb/s)', 291580 , TO_DATE('2024-11-09'));

SELECT * FROM "HDD" ORDER BY "HDD_ID" ASC;





-- POWER 테이블--------------------------------------------------------
CREATE TABLE "POWER" (
	"POWER_ID" NUMBER PRIMARY KEY,
    "CATEGORY_ID" NUMBER NOT NULL,
    "MANUFACTURER" VARCHAR(230) NOT NULL,
    "PRODUCT_NAME" VARCHAR2(100) NOT NULL,
    "RATED_OUTPUT" VARCHAR(230) NOT NULL,
    "EFFICIENCY_CERTIFICATION" VARCHAR(230) NOT NULL,
    "PSU_STANDARD" VARCHAR(230) NOT NULL,
    "ETA_CERTIFICATION" VARCHAR(230),
    "PRICE" NUMBER NOT NULL,
    "RELEASE_DATE" DATE NOT NULL,
    FOREIGN KEY ("CATEGORY_ID") REFERENCES "CATEGORY"("CATEGORY_ID") -- 관계 설정
);
CREATE SEQUENCE SEQ_POWER NOCACHE;

-- 데이터 삽입
INSERT INTO "POWER" ("POWER_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "RATED_OUTPUT", "EFFICIENCY_CERTIFICATION", "PSU_STANDARD", "ETA_CERTIFICATION", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_POWER.NEXTVAL, 6, '마이크로닉스', '마이크로닉스 Classic II 850W 80PLUS골드 풀모듈러 ATX3.1', '850W', '80 PLUS 골드', 'ATX',NULL, 165240 , TO_DATE('2024-05-15'));

INSERT INTO "POWER" ("POWER_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "RATED_OUTPUT", "EFFICIENCY_CERTIFICATION", "PSU_STANDARD", "ETA_CERTIFICATION" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_POWER.NEXTVAL, 6, '시소닉', '시소닉 NEW FOCUS V4 GX-850 GOLD 풀모듈러 ATX3.1', '850W', '80 PLUS 골드', 'ATX', 'PLATINUM' , 197230 , TO_DATE('2024-09-28'));

INSERT INTO "POWER" ("POWER_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "RATED_OUTPUT", "EFFICIENCY_CERTIFICATION", "PSU_STANDARD", "ETA_CERTIFICATION" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_POWER.NEXTVAL, 6, '잘만', '잘만 GigaMax III 850W 80PLUS브론즈 모듈러 ATX3.1', '850W', '80 PLUS 브론즈', 'ATX', 'SILVER', 91260 , TO_DATE('2023-10-22'));

INSERT INTO "POWER" ("POWER_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "RATED_OUTPUT", "EFFICIENCY_CERTIFICATION", "PSU_STANDARD", "ETA_CERTIFICATION" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_POWER.NEXTVAL, 6, '마이크로닉스', '마이크로닉스 Classic II 풀체인지 700W 80PLUS브론즈 ATX3.1', '700W', '80 PLUS 브론즈', 'ATX', 'BRONZE', 81540 , TO_DATE('2024-04-18'));

INSERT INTO "POWER" ("POWER_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "RATED_OUTPUT", "EFFICIENCY_CERTIFICATION", "PSU_STANDARD", "ETA_CERTIFICATION" , "PRICE" , "RELEASE_DATE")
VALUES (SEQ_POWER.NEXTVAL, 6, '마이크로닉스', '마이크로닉스 Classic II 1050W 80PLUS골드 풀모듈러 ATX3.1', '1050W', '80 PLUS 골드', 'ATX',NULL, 207100 , TO_DATE('2024-08-20'));

SELECT * FROM "POWER" ORDER BY "POWER_ID" ASC;





-- RAM 테이블---------------------------------------------------------------
CREATE TABLE "RAM" (
	"RAM_ID" NUMBER PRIMARY KEY,
    "CATEGORY_ID" NUMBER NOT NULL,
    "MANUFACTURER" VARCHAR(230) NOT NULL,
    "PRODUCT_NAME" VARCHAR2(100) NOT NULL,
    "PRODUCT_CLASSIFICATION" VARCHAR(230) NOT NULL,
    "CAPACITY" VARCHAR(230) NOT NULL,
    "OPERATING_CLOCK" VARCHAR(230) NOT NULL,
    "PRICE" NUMBER NOT NULL,
    "RELEASE_DATE" DATE NOT NULL,
    FOREIGN KEY ("CATEGORY_ID") REFERENCES "CATEGORY"("CATEGORY_ID") -- 관계 설정
);
CREATE SEQUENCE SEQ_RAM NOCACHE;

-- 데이터 삽입
INSERT INTO "RAM" ("RAM_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "PRODUCT_CLASSIFICATION", "CAPACITY", "OPERATING_CLOCK", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_RAM.NEXTVAL, 7, 'TeamGroup', 'TeamGroup DDR5-5600 CL46 Elite 서린 (16GB)', 'DDR5', '16GB', '5600MHz (PC5-44800)', 56270 , TO_DATE('2022-07-11'));

INSERT INTO "RAM" ("RAM_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "PRODUCT_CLASSIFICATION", "CAPACITY", "OPERATING_CLOCK", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_RAM.NEXTVAL, 7, '삼성전자', '삼성전자 DDR5-5600 (32GB)', 'DDR5', '32GB', '5600MHz (PC5-44800)', 130910 , TO_DATE('2023-06-21'));

INSERT INTO "RAM" ("RAM_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "PRODUCT_CLASSIFICATION", "CAPACITY", "OPERATING_CLOCK", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_RAM.NEXTVAL, 7, 'G.SKILL', 'G.SKILL DDR5-6000 CL30 RIPJAWS M5 RGB 화이트 패키지 (32GB(16Gx2))', 'DDR5', '32GB', '6000MHz (PC5-48000)', 179820 , TO_DATE('2024-06-17'));

INSERT INTO "RAM" ("RAM_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "PRODUCT_CLASSIFICATION", "CAPACITY", "OPERATING_CLOCK", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_RAM.NEXTVAL, 7, '마이크론', '마이크론 Crucial DDR5-5600 CL46 대원씨티에스 (16GB)', 'DDR5', '16GB', '5600MHz (PC5-44800)', 52600 , TO_DATE('2023-05-30'));

INSERT INTO "RAM" ("RAM_ID", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "PRODUCT_CLASSIFICATION", "CAPACITY", "OPERATING_CLOCK", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_RAM.NEXTVAL, 7, 'G.SKILL', 'G.SKILL DDR4-4000 CL18 TRIDENT Z RGB 패키지 (32GB(16Gx2))', 'DDR4', '32GB', '4000MHz (PC4-32000)', 140800 , TO_DATE('2021-11-26'));


SELECT * FROM "RAM" ORDER BY "RAM_ID" ASC;





-- MAINBOARD 테이블------------------------------------------------------------
CREATE TABLE MAINBOARD (
	"MAINBOARD_ID" NUMBER PRIMARY KEY,
    "CATEGORY_ID" NUMBER NOT NULL,
    "PRODUCT_CLASSIFICATION" VARCHAR(230) NOT NULL,
    "MANUFACTURER" VARCHAR(230) NOT NULL,
    "PRODUCT_NAME" VARCHAR2(100) NOT NULL,
    "SOCKET" VARCHAR(230) NOT NULL,
    "DETAILED_CHIPSET" VARCHAR(230) NOT NULL,
    "FORM_FACTOR" VARCHAR(230) NOT NULL,
    "VCORE_OUTPUT_TOTAL" VARCHAR(230) NOT NULL,
    "SUPPORTED_MEMORY_STANDARD" VARCHAR2(50) NOT NULL,
    "PRICE" NUMBER NOT NULL,
    "RELEASE_DATE" DATE NOT NULL,
    FOREIGN KEY ("CATEGORY_ID") REFERENCES "CATEGORY"("CATEGORY_ID") -- 관계 설정
);
CREATE SEQUENCE SEQ_MAINBOARD NOCACHE;

-- 데이터 삽입
INSERT INTO "MAINBOARD" ("MAINBOARD_ID", "CATEGORY_ID", "PRODUCT_CLASSIFICATION", "MANUFACTURER", "PRODUCT_NAME", "SOCKET", "DETAILED_CHIPSET", "FORM_FACTOR", "VCORE_OUTPUT_TOTAL", "SUPPORTED_MEMORY_STANDARD", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_MAINBOARD.NEXTVAL, 8, '인텔 CPU용', 'MSI', 'MSI MAG Z890 토마호크 WIFI', '인텔(소켓1851)', '인텔 Z890', 'ATX', '페이즈당90A', 'DDR5', 465470 , TO_DATE('2024-10-11'));

INSERT INTO "MAINBOARD" ("MAINBOARD_ID", "CATEGORY_ID", "PRODUCT_CLASSIFICATION", "MANUFACTURER", "PRODUCT_NAME", "SOCKET", "DETAILED_CHIPSET", "FORM_FACTOR", "VCORE_OUTPUT_TOTAL", "SUPPORTED_MEMORY_STANDARD", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_MAINBOARD.NEXTVAL, 8, '인텔 CPU용', 'ASUS', 'ASUS ROG STRIX Z890-A GAMING WIFI 인텍앤컴퍼니', '인텔(소켓1851)', '인텔 Z890', 'ATX', '페이즈당90A', 'DDR5', 604950 , TO_DATE('2024-10-18'));

INSERT INTO "MAINBOARD" ("MAINBOARD_ID", "CATEGORY_ID", "PRODUCT_CLASSIFICATION", "MANUFACTURER", "PRODUCT_NAME", "SOCKET", "DETAILED_CHIPSET", "FORM_FACTOR", "VCORE_OUTPUT_TOTAL", "SUPPORTED_MEMORY_STANDARD", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_MAINBOARD.NEXTVAL, 8, 'AMD CPU용', 'GIGABYTE', 'GIGABYTE X870E AORUS PRO ICE 피씨디렉트', 'AMD(소켓AM5)', 'AMD X870E', 'ATX', '페이즈당80A', 'DDR5', 463300 , TO_DATE('2024-09-24'));

INSERT INTO "MAINBOARD" ("MAINBOARD_ID", "CATEGORY_ID", "PRODUCT_CLASSIFICATION", "MANUFACTURER", "PRODUCT_NAME", "SOCKET", "DETAILED_CHIPSET", "FORM_FACTOR", "VCORE_OUTPUT_TOTAL", "SUPPORTED_MEMORY_STANDARD", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_MAINBOARD.NEXTVAL, 8, 'AMD CPU용', 'ASRock', 'ASRock X870 Pro RS 에즈윈', 'AMD(소켓AM5)', 'AMD X870', 'ATX', '페이즈당80A	', 'DDR5', 364970 , TO_DATE('2024-09-21'));

INSERT INTO "MAINBOARD" ("MAINBOARD_ID", "CATEGORY_ID", "PRODUCT_CLASSIFICATION", "MANUFACTURER", "PRODUCT_NAME", "SOCKET", "DETAILED_CHIPSET", "FORM_FACTOR", "VCORE_OUTPUT_TOTAL", "SUPPORTED_MEMORY_STANDARD", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_MAINBOARD.NEXTVAL, 8, 'AMD CPU용', 'MSI', 'MSI MAG X870 토마호크 WIFI', 'AMD(소켓AM5)', 'AMD X870', 'ATX', '페이즈당80A', 'DDR5', 475230 , TO_DATE('2024-09-03'));

SELECT * FROM "MAINBOARD" ORDER BY "MAINBOARD_ID" ASC;






-- CASE 테이블------------------------------------------------------------------
CREATE TABLE "CASE" (
	"CASE" NUMBER PRIMARY KEY,
    "CATEGORY_ID" NUMBER NOT NULL,
    "MANUFACTURER" VARCHAR(230) NOT NULL,
    "PRODUCT_NAME" VARCHAR2(100) NOT NULL,
    "PRODUCT_CLASSIFICATION" VARCHAR(230) NOT NULL,
    "CASE_SIZE" VARCHAR(230) NOT NULL,
    "POWER_SUPPLY_STANDARD" VARCHAR(230) NOT NULL,
    "SUPPORTED_BOARD_STANDARD" VARCHAR(230) NOT NULL,
    "BAY_13_3CM" VARCHAR(230) NOT NULL,
    "BAY_8_9CM" VARCHAR(230) NOT NULL,
    "VGA_LENGTH" NUMBER NOT NULL,
    "PRICE" NUMBER NOT NULL,
    "RELEASE_DATE" DATE NOT NULL,
    FOREIGN KEY ("CATEGORY_ID") REFERENCES "CATEGORY"("CATEGORY_ID") -- 관계 설정
);
CREATE SEQUENCE SEQ_CASE NOCACHE;

-- 데이터 삽입
INSERT INTO "CASE" ("CASE", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "PRODUCT_CLASSIFICATION", "CASE_SIZE", "POWER_SUPPLY_STANDARD", "SUPPORTED_BOARD_STANDARD", "BAY_13_3CM", "BAY_8_9CM", "VGA_LENGTH", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_CASE.NEXTVAL, 9, '마이크로닉스', '마이크로닉스 COOLMAX 가성비 NO.2', 'PC케이스(ATX)', '미들타워', '표준-ATX', 'ATX, M-ATX, ITX', '1', '3', 310, 20060 , TO_DATE('2019-12-15'));

INSERT INTO "CASE" ("CASE", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "PRODUCT_CLASSIFICATION", "CASE_SIZE", "POWER_SUPPLY_STANDARD", "SUPPORTED_BOARD_STANDARD", "BAY_13_3CM", "BAY_8_9CM", "VGA_LENGTH", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_CASE.NEXTVAL, 9, 'Fractal Design', 'Fractal Design Define 7 Clear 강화유리 (화이트)', 'PC케이스(ATX)', '미들타워' , '표준-ATX', 'ATX, E-ATX, M-ATX, M-ITX', '1', '6', 470, 319660 , TO_DATE('2020-03-29'));

INSERT INTO "CASE" ("CASE", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "PRODUCT_CLASSIFICATION", "CASE_SIZE", "POWER_SUPPLY_STANDARD", "SUPPORTED_BOARD_STANDARD", "BAY_13_3CM", "BAY_8_9CM", "VGA_LENGTH", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_CASE.NEXTVAL, 9, '잘만', '잘만 Z1 PLUS 강화유리', 'PC케이스(ATX)', '미들타워', '표준-ATX', 'ATX, M-ATX' , '1', '2', 385, 52800 , TO_DATE('2024-01-12'));

INSERT INTO "CASE" ("CASE", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "PRODUCT_CLASSIFICATION", "CASE_SIZE", "POWER_SUPPLY_STANDARD", "SUPPORTED_BOARD_STANDARD", "BAY_13_3CM", "BAY_8_9CM", "VGA_LENGTH", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_CASE.NEXTVAL, 9, 'Fractal Design', 'Fractal Design Define 7 XL', 'PC케이스(ATX)', '빅타워', '표준-ATX', 'ATX, E-ATX, M-ATX, M-ITX', '1', '8', 530, 316800 , TO_DATE('2020-03-24'));

INSERT INTO "CASE" ("CASE", "CATEGORY_ID", "MANUFACTURER", "PRODUCT_NAME", "PRODUCT_CLASSIFICATION", "CASE_SIZE", "POWER_SUPPLY_STANDARD", "SUPPORTED_BOARD_STANDARD", "BAY_13_3CM", "BAY_8_9CM", "VGA_LENGTH", "PRICE" , "RELEASE_DATE")
VALUES (SEQ_CASE.NEXTVAL, 9, 'CHENBRO', 'CHENBRO SR10569', 'PC케이스(ATX)', '미들타워', '표준-ATX', 'ATX, M-ATX, M-ITX', '2', '2', 380, 81000 , TO_DATE('2021-06-16'));

SELECT * FROM "CASE" ORDER BY "CASE" ASC
